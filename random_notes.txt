Główna dokumentacja jest w dokumencie na google-docsach:
https://docs.google.com/document/d/10MbrynYjchbdK_8ktb1hMgdaupQAVE-z4DZIZ5x-Pts/edit

*** Pomysły na efekty:

*** Optymalizacje:
- jak zoom == 1 to w trybie blend nie ma sensu renderować do FBO
- nie rysować partikli które mają alpha == 0
- Różne instancje (szczególnie jak korzystamy ze snapshotów) mogą korzystać z tej samej animacji
  jeśli na ekranie jest np. kilkanaście efektów to gracz raczej nie zauważy, że niektóre są takie same
- Przy generowaniu particli możemy je od razu wrzucać do odpowiednich buforów (różne bufory dla
  różnych sposobów blendingu, tekstur, etc.)
- Przełączenie się na domyślne 30 FPS ?

*** Poprawki / ulepszenia systemowe:
- opcja ustawienia domyślnego parametru koloru dla efektu?

*** Do sprawdzenia / przetestowania:

*** Pozostałe:

RICH_ENUM : unsigned char ?

Bug: jak postacie pojawiają się za pierwszym razem po odpaleniu gry, to FXy nie są odpalane ze snaposhotów
      (np. SPEED) z jakiegoś powodu...
Bug: GLITTERING pojawiający się na brzegach złota i czarnego kafla oświetla za bardzo czarny kafel (widać kontrast)...

Uwaga: jak podbijam jakiś przeciwników to czasami nie dostaję wogóle XPków, może fajnie by było jakby było wiadome
  ile XPków za podbicie kogo się dostanie, i ile XPków potrzeba do kolejnego poziomu (transparentność zasad jest generalnie
  dobrym pomysłem)

---------------------------------------------------------------------------------------------
Jak zrobić rendering, żeby można było lepiej komponować FXy ze sobą?

- moglibyśmy wyliczyć bounding boxy dla efektów, i renderować każdy efekt niezależnie
  problem: jeśli efekt ma warstwy, to musimy rysować każdą warstwę niezależnie
  na podstawie bounding boxów moglibyśmy alokować miejsce dla FXa w FBosie; jakby miejsce się
  kończyło, to byśmy zaalokowali większy FBO? od razu (przed renderingiem wiedzielibyśmy
  ile miejsca na FX byłoby potrzeba);
  Lepiej chyba alokować miejsce co do piksela a nie kafla; Można potem zaalokowac miejsce
  algorytmem takim jak we FreeFT do generowania atlasów

- następnie w grze moglibyśmy wklejać odpowiednie kawałki z framebuffera

- wkurzające jest dpoasowywanie kafli do tego co wyświetlamy na ekranie

- co wyświetlamy? jakiś kawałek świata (rect) z zoomem lub bez; zależnie od zooma
  docelowy rect (na ekranie) może być innych rozmiarów

- wszystkie efekty rysujemy razem do jednych draw buffersów, ale przy ich generowaniu
  generujemty też przypisania FX - element w draw buffersie ?

- po wygenerowaniu efektów będziemy musieli jeszcze te efekty poprzesuwać ?

- od razu możemy też lepiej posortować efekty w draw_buffersach (posortować po teksturkach?)
  albo np. mieć niezależne listy elementów dla każdego rodzaju tekstury

- po dodaniu do drawbuffersów mamy zakres pozycji które odpowiadają danemu efektowi
  z tego liczymy bounding box i później ew. dodajemy przesunięcie w ramach FBO

- w takim systemie moglibyśmy też usunąć pozycję efektu z jego stanu (aplikować pozycję
  dopiero przy końcowym rysowaniu)
  to by z kolei pozwalało na używanie tej samej animacji w kilku miejscach (ale to na potem
  w przypadku rzeczywistych problemów z wydajnością)

- jak dobrze zmapować recty w world na fbo? to nie jest takie oczywiste...
