Główna dokumentacja jest w dokumencie na google-docsach:
https://docs.google.com/document/d/10MbrynYjchbdK_8ktb1hMgdaupQAVE-z4DZIZ5x-Pts/edit

Wymiary kafli: 24x24 (dwukrotnie powiększone)
  niektóre sprite-y na kaflach wystają poza region samego kafla
  np. drzewka albo niektóre postacie wystają trochę z góry

Mini todo:
- BLEND ADD! Ale przy renderingu FBO a nie poszczególnych cząstek!
- jak zoom == 1 to nie ma sensu renderować do FBO
- niektóre efekty działają po zabiciu postaci
- płomień się czasami restartuje (trzeba podpalić cały las)

- możemy w momencie renderowania danego obiektu wykrywać czy powinien też być animowany jakiś efekt
  możemy trzymać tablicę obiektów wyświetlanych z poprzedniej klatki;
  jeśli widok się zmienił, to efekty które wyszły poza zakres są kasowane
  jeśli dany obiekt był wyświetlany w poprzedniej klatce i nie miał danego efektu, to odpalamy efekt od początku
  jeśli dany obiekt dopiero co się pojawił to odpalamy efekt z losowego punktu (ale takiego, żeby było wiadomo, że nie jest od początku)

- problem jak zrobić, żeby efekty bardziej paoswały do gry?
  rozpikselowanie nie wystarcza...

- potestować Zoom UI (hiidpi)
- bug w openglu (w emailu) 
- jak zoom == 1 to nie ma sensu renderować do FBO

- nie rysować partikli które mają alpha == 0 ? Chyba, że są addytywne, wtedy kolor ma znaczenie
- połączenie EmiterDefa i ParticleDefa?
- pamiętaj o stylu nazewnictwa commitów & zmiennych
- zainspirować się efektami z innych gier

Mało ważne:
- możliwość wizualizacji krzywych chyba jednak się przyda?
- hook do gita, który weryfikuje, że wszystko jest sformatowane jak należy
  (choć przydałaby się też możliwość zignorowania go)
- ustaw sobie w Vimie, żeby nie używał tabów
- toString dla enumów

Pomysły na potem:
- warstwowe rysowanie sprite-ów i efektów; Ew. na potem; na razie spróbujmy zrobić coś fajnego
  z tym co mamy

Jak zrobić fajny rendering cząsteczek poprzez FBO?



---------------------------------- Lepszy blending -------------------------------------------------

- dziwny warning w fx_testerze na NVIDii
- wielkosci tkstur (potegi dwojki)

- możliwość generowania dwóch DrawParticli z jednego Particla (z różnymi teksturkami)
- zamienić textureName na coś innego (bo nie jest to do końca tekstura, może dałoby się tutaj np. robić takie bajery
  jak w Diablo3 z wieloma teksturkami per particle?)

- problem: tryb addytywny sprawia wrażenie jakby cząsteczki się świeciły, nie chcemy się tego zupełnie pozbywać
  moglibyśmy renderować do teksturki typu glow która byłaby addytywna ?
  cały czas mamy problem: jaka część wyniku do glow a jaka normalnie ?


- chcę, żeby parametr alpha wpływał na moc blendowania i dodawania
  nie powinien zmieniać koloru  

- możliwość przypisania wielu tekstur do jednej cząsteczki ?

- chcemy wygenerować dwie tkestury FBO:
  - jedna do normalnego blendowania (ma kanał alpha)
  - jedna do blendowania addytywnego

Jak w normalnym blendowaniu łączyć kolory? I od jakiego koloru powinienem zacząć ?


- np. mam 3 kolory;
  od jakiego koloru powinienem zaczynać ?

    (0, 0, 0), 0
  + (Ar, Ag, Ab), Aa
  + (Br, Bg, Bb), Ba
  + (Cr, Cg, Cb), Ca

    (((Dst * (1 - a)) + A * a) * (1 - b) + B * b) * (1 - c) + C * c

  Dst * (1 - a) * (1 - b) * (1 - c)
  A * a * (1 - b) * (1 - c)
  B * b * (1 - c)
  C * c
   
  Sum = 0
  Sum = Sum * (1 - a) + A * a
  Sum = Sum * (1 - b) + B * b
  Sum = Sum * (1 - c) + C * c
  

   Dst * (1 - s) + S * s

- czy każdy efekt renderuję niezależnie? Mógłbym wtedy zaaplikować końcowy kolor do teksturek
